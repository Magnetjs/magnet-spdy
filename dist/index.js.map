{"version":3,"sources":["../src/index.js"],"names":[],"mappings":";;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;;;IAEqB;;;;;;;;;;;;;;;YAEb,cACA,WAIE,KAQA;;;;;AAbF;AACA;;AACJ,qBAAK,YAAL,GAAoB,qCAAqB,KAAK,MAAL,CAAY,MAAZ,EAAoB,KAAK,MAAL,CAAY,IAAZ,CAA7D;;AAEA,oBAAI,KAAK,YAAL,CAAkB,WAAlB,CAA8B,MAA9B,EAAsC;AACpC,+BADoC;;;AAGxC,sBAAI,KAAK,YAAL,CAAkB,WAAlB,CAA8B,OAA9B,EAAuC;AACzC,0BAAM,6BAAG,OAAH,EAAN,CADyC;mBAA3C,MAEO;AACL,uDADK;mBAFP;;AAMI,wBAAM,IAAI,MAAJ,CAAW;AACnB,+BAAW,KAAK,YAAL,CAAkB,WAAlB,CAA8B,SAA9B;AACX,yCAAqB,6BAAC,QAAD,EAAW,EAAX,EAAkB;;;AAErC,yBAAG,IAAH,EAAS;AACP,iCAAS,CAAC,QAAD,CAAT;AACA,+BAAO,OAAK,YAAL,CAAkB,WAAlB,CAA8B,KAA9B;AACP,kCAAU,IAAV;uBAHF,EAFqC;qBAAlB;mBAFb,EAT8B;;;AAqBxC,iCAAe,IAAI,YAAJ,CArByB;AAsBxC,8BAAY,IAAI,mBAAJ,CAAwB,GAAxB,EAA6B,KAAK,GAAL,CAAS,WAAT,CAAqB,QAArB,EAA7B,CAAZ,CAtBwC;iBAA1C,MAuBO;AACL,iCAAe,KAAK,YAAL,CADV;AAEL,8BAAY,KAAK,GAAL,CAAS,WAAT,CAAqB,QAArB,EAAZ,CAFK;iBAvBP;;;;;AA+BA,qBAAK,GAAL,CAAS,MAAT,GAAkB,eAAM,YAAN,CAAmB,YAAnB,EAAiC,SAAjC,CAAlB;;;;;;;;;;;;;;;;;;;;;;;;;YAOI;;;;;sBAAM;;AACV,qBAAK,GAAL,CAAS,QAAT,GAAoB,KAAK,GAAL,CAAS,MAAT,CAAgB,MAAhB,CAAuB,KAAK,YAAL,CAAkB,IAAlB,EAAwB,YAAW;AAC5E,sBAAI,GAAJ,CAAQ,IAAR,6BAAuC,KAAK,OAAL,GAAe,IAAf,CAAvC,CAD4E;iBAAX,CAAnE;;;;;;;;;;;;;;;;;;SA7CiB","file":"index.js","sourcesContent":["import Base from 'magnet-core/dist/base';\nimport https from 'spdy';\nimport le from 'letsencrypt-express';\nimport merge from 'lodash/merge';\nimport defaultConfig from './config/spdy'\n\nexport default class SPDY extends Base {\n  async setup() {\n    let httpsOptions;\n    let responder;\n    this.serverConfig = merge(defaultConfig, this.config.server, this.config.spdy);\n\n    if (this.serverConfig.letsEncrypt.enable) {\n      let LEX;\n\n      if (this.serverConfig.letsEncrypt.testing) {\n        LEX = le.testing();\n      } else {\n        LEX = le;\n      }\n\n      let lex = LEX.create({\n        configDir: this.serverConfig.letsEncrypt.configDir,\n        approveRegistration: (hostname, cb) => { // leave `null` to disable automatic registration\n          // Note: this is the place to check your database to get the user associated with this domain\n          cb(null, {\n            domains: [hostname],\n            email: this.serverConfig.letsEncrypt.email,\n            agreeTos: true\n          });\n        }\n      });\n\n      httpsOptions = lex.httpsOptions;\n      responder = LEX.createAcmeResponder(lex, this.app.application.callback());\n    } else {\n      httpsOptions = this.serverConfig;\n      responder = this.app.application.callback();\n    }\n\n    /**\n    * Create server\n    */\n    this.app.server = https.createServer(httpsOptions, responder);\n  }\n\n  /**\n   * Start SPDY server\n   */\n  async start() {\n    let ctx = this;\n    this.app.runnable = this.app.server.listen(this.serverConfig.port, function() {\n      ctx.log.info(`Server started at port ${this.address().port}`);\n    });\n  }\n}\n"]}